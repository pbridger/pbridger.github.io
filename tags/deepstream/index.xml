<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DeepStream on paulbridger.com</title><link>https://paulbridger.com/tags/deepstream/</link><description>Recent content in DeepStream on paulbridger.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 17 Oct 2020 08:43:23 +0200</lastBuildDate><atom:link href="https://paulbridger.com/tags/deepstream/index.xml" rel="self" type="application/rss+xml"/><item><title>Object Detection at 1840 FPS with TorchScript, TensorRT and DeepStream</title><link>https://paulbridger.com/posts/video-analytics-deepstream-pipeline/</link><pubDate>Sat, 17 Oct 2020 08:43:23 +0200</pubDate><guid>https://paulbridger.com/posts/video-analytics-deepstream-pipeline/</guid><description>In this article we take performance of the SSD300 model even further, leaving Python behind and moving towards true production deployment technologies: TorchScript, TensorRT and DeepStream. We also identify and understand several limitations in Nvidia&amp;rsquo;s DeepStream framework, and then remove them by modifying how the &lt;code>nvinfer&lt;/code> element works.</description></item></channel></rss>